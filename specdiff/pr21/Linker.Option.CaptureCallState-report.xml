<?xml version="1.0" encoding="UTF-8"?><diffreport><diff><div class="flex-box"><div class="flex-content"> <main role="main"><div class="header"><div class="sub-title"> <span class="module-label-in-type">Module</span> <a href="../../../module-summary.html">java.base</a> </div><div class="sub-title"> <span class="package-label-in-type">Package</span> <a href="package-summary.html">java.lang.foreign</a> </div><h1 title="Interface Linker.Option.CaptureCallState" class="title">Interface Linker.Option.CaptureCallState </h1></div> <a start_ctx_id="class:Linker.Option.CaptureCallState"/> <section class="class-description" id="class-description"><dl class="notes"> <dt>All Superinterfaces: </dt><dd> <code><a href="Linker.Option.html" title="interface in java.lang.foreign">Linker.Option</a><sup><a href="Linker.Option.html#preview-java.lang.foreign.Linker.Option">PREVIEW</a></sup></code> </dd> </dl><dl class="notes"> <dt>Enclosing interface: </dt><dd> <code><a href="Linker.Option.html" title="interface in java.lang.foreign">Linker.Option</a><sup><a href="Linker.Option.html#preview-java.lang.foreign.Linker.Option">PREVIEW</a></sup></code> </dd> </dl> <hr/><div class="type-signature"> <span class="modifiers">public static sealed interface     </span><span class="element-name type-name-label">Linker.Option.CaptureCallState</span><span class="extends-implements"> extends <a href="Linker.Option.html" title="interface in java.lang.foreign">Linker.Option</a><sup><a href="Linker.Option.html#preview-java.lang.foreign.Linker.Option">PREVIEW</a></sup>  </span> </div><div class="preview-block" id="preview-java.lang.foreign.Linker.Option.CaptureCallState"> <span class="preview-label"><code>CaptureCallState</code> is a preview API of the Java platform.        </span><div class="preview-comment"> Programs can only use <code>CaptureCallState</code> when preview features are enabled.          </div><div class="preview-comment">Preview features may be removed in a future release, or upgraded to permanent features of the Java platform.                 </div> </div><div class="block"> A linker option for saving portions of the execution state immediately after calling a foreign function associated with a downcall method handle, before it can be overwritten by the runtime, or read through conventional means.<p> Execution state is captured by a downcall method handle on invocation, by writing it to a native segment provided by the user to the downcall method handle. For this purpose, a downcall method handle linked with the <a href="Linker.Option.html#captureCallState(java.lang.String...)"><code>Linker.Option.captureCallState(String[])</code></a><sup><a href="Linker.Option.html#preview-java.lang.foreign.Linker.Option">PREVIEW</a></sup> option will feature an additional <a href="MemorySegment.html" title="interface in java.lang.foreign"><code>MemorySegment</code></a><sup><a href="MemorySegment.html#preview-java.lang.foreign.MemorySegment">PREVIEW</a></sup> parameter directly following the target address, and optional <a href="SegmentAllocator.html" title="interface in java.lang.foreign"><code>SegmentAllocator</code></a><sup><a href="SegmentAllocator.html#preview-java.lang.foreign.SegmentAllocator">PREVIEW</a></sup> parameters. This parameter represents the native segment into which the captured state is written.                                                                   </p><p> The native segment should have the layout <a href="#layout()">associated</a> with the particular <code>CaptureCallState</code> instance used to link the downcall handle.                   </p><p> Captured state can be retrieved from this native segment by constructing var handles from the <a href="#layout()">layout</a> associated with the <code>CaptureCallState</code> instance.                     </p><p> The following example demonstrates the use of this linker option:          </p><div class="snippet-container"> <button class="copy snippet-copy"><span data-copied="Copied!">Copy</span><img src="../../../../copy.svg" alt="Copy"/></button><pre class="snippet">
                                    <code class="language-java">MemorySegment targetAddress = ...
CaptureCallState ccs = Linker.Option.captureCallState("errno");
MethodHandle handle = Linker.nativeLinker().downcallHandle(targetAddress, FunctionDescriptor.ofVoid(), ccs);

VarHandle errnoHandle = ccs.layout().varHandle(PathElement.groupElement("errno"));
try (Arena arena = Arena.openConfined()) {
    MemorySegment capturedState = arena.allocate(ccs.layout());
    handle.invoke(capturedState);
    int errno = errnoHandle.get(capturedState);
    // use errno
}
</code>
                                </pre> </div>                                   </div>   </section> <a end_ctx_id="class:Linker.Option.CaptureCallState"/> <section class="summary"><ul class="summary-list"><li> <section class="nested-class-summary" id="nested-class-summary"><h2>Nested Class Summary  </h2><div class="inherited-list"><h2 id="nested-classes-inherited-from-class-java.lang.foreign.Linker.Option"> Nested classes/interfaces inherited from interface java.lang.foreign.<a href="Linker.Option.html" title="interface in java.lang.foreign">Linker.Option</a><sup><a href="Linker.Option.html#preview-java.lang.foreign.Linker.Option">PREVIEW</a></sup>     </h2> <code><a href="Linker.Option.CaptureCallState.html" title="interface in java.lang.foreign">Linker.Option.CaptureCallState</a><sup><a href="#preview-java.lang.foreign.Linker.Option.CaptureCallState">PREVIEW</a></sup></code> </div>  </section> </li><li> <section class="method-summary" id="method-summary"><h2>Method Summary </h2><div id="method-summary-table"><div class="table-tabs" role="tablist" aria-orientation="horizontal"> <button id="method-summary-table-tab0" role="tab" aria-selected="true" aria-controls="method-summary-table.tabpanel" tabindex="0" class="active-table-tab">All Methods </button><button id="method-summary-table-tab1" role="tab" aria-selected="false" aria-controls="method-summary-table.tabpanel" tabindex="-1" class="table-tab">Static Methods </button><button id="method-summary-table-tab2" role="tab" aria-selected="false" aria-controls="method-summary-table.tabpanel" tabindex="-1" class="table-tab">Instance Methods </button><button id="method-summary-table-tab3" role="tab" aria-selected="false" aria-controls="method-summary-table.tabpanel" tabindex="-1" class="table-tab">Abstract Methods </button> </div><div id="method-summary-table.tabpanel" role="tabpanel"><div class="summary-table three-column-summary" aria-labelledby="method-summary-table-tab0"><div class="table-header col-first">Modifier and Type  </div><div class="table-header col-second">Method</div><div class="table-header col-last">Description</div><div class="col-first even-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab3"> <code><a href="StructLayout.html" title="interface in java.lang.foreign">StructLayout</a><sup><a href="StructLayout.html#preview-java.lang.foreign.StructLayout">PREVIEW</a></sup></code> </div><div class="col-second even-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab3"> <code><a href="#layout()" class="member-name-link">layout</a>()</code> </div><div class="col-last even-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab3"><div class="block"> Returns A struct layout that represents the layout of the native segment passed to a downcall handle linked with this <code>CapturedCallState</code> instance.                      </div></div><div class="col-first odd-row-color method-summary-table method-summary-table-tab1"> <code>static <a href="../../util/Set.html" title="interface in java.util">Set</a>&lt;<a href="../String.html" title="class in java.lang">String</a>&gt; </code> </div><div class="col-second odd-row-color method-summary-table method-summary-table-tab1"> <code><a href="#supported()" class="member-name-link">supported</a>()</code> </div><div class="col-last odd-row-color method-summary-table method-summary-table-tab1"><div class="block">Returns the names of the state that can be capture by this implementation.            </div></div></div></div></div>  </section> </li></ul>  </section> <section class="details"><ul class="details-list"><li> <section class="method-details" id="method-detail"><h2>Method Details </h2><ul class="member-list"><li> <a start_ctx_id="method:layout()"/> <section class="detail" id="layout()"><h3>layout</h3><div class="member-signature"> <span class="return-type"><a href="StructLayout.html" title="interface in java.lang.foreign">StructLayout</a><sup><a href="StructLayout.html#preview-java.lang.foreign.StructLayout">PREVIEW</a></sup></span> <span class="element-name">layout</span>() </div><div class="block"> Returns A struct layout that represents the layout of the native segment passed to a downcall handle linked with this <code>CapturedCallState</code> instance.                      </div><dl class="notes"> <dt>Returns:</dt><dd> A struct layout that represents the layout of the native segment passed to a downcall handle linked with this <code>CapturedCallState</code> instance                     </dd> </dl>  </section>  </li><li> <a end_ctx_id="method:layout()"/> <hr/> <a start_ctx_id="method:supported()"/> <section class="detail" id="supported()"><h3>supported</h3><div class="member-signature"> <span class="modifiers">static</span> <span class="return-type"><a href="../../util/Set.html" title="interface in java.util">Set</a>&lt;<a href="../String.html" title="class in java.lang">String</a>&gt;</span> <span class="element-name">supported</span>() </div><div class="block">Returns the names of the state that can be capture by this implementation.            </div><dl class="notes"> <dt>Returns:</dt><dd>the names of the state that can be capture by this implementation           </dd> </dl>  </section>    </li></ul>  </section> </li></ul>  </section> <a end_ctx_id="method:supported()"/> <hr/>         </main> </div></div></diff></diffreport>