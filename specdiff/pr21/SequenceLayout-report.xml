<?xml version="1.0" encoding="UTF-8"?><diffreport><diff><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">class:SequenceLayout [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="class:SequenceLayout"/> <section class="class-description" id="class-description"><dl class="notes"> <dt>All Superinterfaces: </dt><dd> <code><a href="MemoryLayout.html" title="interface in java.lang.foreign">MemoryLayout</a><sup><a href="MemoryLayout.html#preview-java.lang.foreign.MemoryLayout">PREVIEW</a></sup></code> </dd> </dl> <hr/><div class="type-signature"> <span class="modifiers">public sealed interface    </span><span class="element-name type-name-label">SequenceLayout</span><span class="extends-implements"> extends <a href="MemoryLayout.html" title="interface in java.lang.foreign">MemoryLayout</a><sup><a href="MemoryLayout.html#preview-java.lang.foreign.MemoryLayout">PREVIEW</a></sup>  </span> </div><div class="preview-block" id="preview-java.lang.foreign.SequenceLayout"> <span class="preview-label"><code>SequenceLayout</code> is a preview API of the Java platform.        </span><div class="preview-comment"> Programs can only use <code>SequenceLayout</code> when preview features are enabled.          </div><div class="preview-comment">Preview features may be removed in a future release, or upgraded to permanent features of the Java platform.                 </div> </div><div class="block"> A compound layout that denotes a repetition of a given <em>element layout </em>. The repetition count is said to be the sequence layout's <em>element count </em>. A finite sequence can be thought of as a group layout where the sequence layout's element layout is repeated a number of times that is equal to the sequence layout's element count. In other words this layout:<div class="snippet-container"> <button class="copy snippet-copy"><span data-copied="Copied!">Copy</span><img src="../../../../copy.svg" alt="Copy"/></button><pre class="snippet">
                                    <code class="language-java">MemoryLayout.sequenceLayout(3, ValueLayout.JAVA_INT.withOrder(ByteOrder.BIG_ENDIAN));
</code>
                                </pre> </div> is equivalent to the following layout:<div class="snippet-container"> <button class="copy snippet-copy"><span data-copied="Copied!">Copy</span><img src="../../../../copy.svg" alt="Copy"/></button><pre class="snippet">
                                    <code class="language-java">MemoryLayout.structLayout(
    ValueLayout.JAVA_INT.withOrder(ByteOrder.BIG_ENDIAN),
    ValueLayout.JAVA_INT.withOrder(ByteOrder.BIG_ENDIAN),
    ValueLayout.JAVA_INT.withOrder(ByteOrder.BIG_ENDIAN));
</code>
                                </pre> </div>                                                                 </div><dl class="notes"> <dt>Implementation Requirements: </dt><dd> This class is immutable, thread-safe and <a href="../../../../java.base/java/lang/doc-files/ValueBased.html">value-based</a>.       </dd> <dt>Since:</dt><dd>19</dd>  </dl>   </section> <a end_ctx_id="class:SequenceLayout"/>   </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:elementLayout() [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><li> <a start_ctx_id="method:elementLayout()"/> <section class="detail" id="elementLayout()"><h3>elementLayout</h3><div class="member-signature"> <span class="return-type"><a href="MemoryLayout.html" title="interface in java.lang.foreign">MemoryLayout</a><sup><a href="MemoryLayout.html#preview-java.lang.foreign.MemoryLayout">PREVIEW</a></sup></span> <span class="element-name">elementLayout</span>() </div><div class="block">Returns the element layout associated with this sequence layout.        </div><dl class="notes"> <dt>Returns:</dt><dd>the element layout associated with this sequence layout       </dd> </dl>  </section>  </li> <a end_ctx_id="method:elementLayout()"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:elementCount() [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:elementCount()"/> <section class="detail" id="elementCount()"><h3>elementCount</h3><div class="member-signature"> <span class="return-type">long</span> <span class="element-name">elementCount</span>() </div><div class="block">Returns the element count of this sequence layout.       </div><dl class="notes"> <dt>Returns:</dt><dd>the element count of this sequence layout      </dd> </dl>  </section> <a end_ctx_id="method:elementCount()"/>   </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:withElementCount(long) [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:withElementCount(long)"/> <section class="detail" id="withElementCount(long)"><h3>withElementCount</h3><div class="member-signature"> <span class="return-type"><a href="SequenceLayout.html" title="interface in java.lang.foreign">SequenceLayout</a><sup><a href="#preview-java.lang.foreign.SequenceLayout">PREVIEW</a></sup></span> <span class="element-name">withElementCount</span> <wbr/> <span class="parameters">(long elementCount)</span>   </div><div class="block">Returns a sequence layout with the same element layout, alignment constraint and name as this sequence layout, but with the specified element count.                      </div><dl class="notes"> <dt>Parameters:</dt><dd> <code>elementCount</code> - the new element count.      </dd> <dt>Returns:</dt><dd>a sequence layout with the given element count.       </dd> <dt>Throws:</dt><dd> <code><a href="../IllegalArgumentException.html" title="class in java.lang">IllegalArgumentException</a></code> - if <code>elementCount &lt; 0  </code>.    </dd>   </dl>  </section> <a end_ctx_id="method:withElementCount(long)"/>   </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:reshape(long...) [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:reshape(long...)"/> <section class="detail" id="reshape(long...)"><h3>reshape</h3><div class="member-signature"> <span class="return-type"><a href="SequenceLayout.html" title="interface in java.lang.foreign">SequenceLayout</a><sup><a href="#preview-java.lang.foreign.SequenceLayout">PREVIEW</a></sup></span> <span class="element-name">reshape</span> <wbr/> <span class="parameters">(long... elementCounts)</span>   </div><div class="block"> Re-arrange the elements in this sequence layout into a multi-dimensional sequence layout. The resulting layout is a sequence layout where element layouts in the flattened projection of this sequence layout (see <a href="#flatten()"><code>flatten()</code></a>) are re-arranged into one or more nested sequence layouts according to the provided element counts. This transformation preserves the layout size; that is, multiplying the provided element counts must yield the same element count as the flattened projection of this sequence layout.<p> For instance, given a sequence layout of the kind:         </p><div class="snippet-container"> <button class="copy snippet-copy"><span data-copied="Copied!">Copy</span><img src="../../../../copy.svg" alt="Copy"/></button><pre class="snippet">
                                                            <code class="language-java">var seq = MemoryLayout.sequenceLayout(4, MemoryLayout.sequenceLayout(3, ValueLayout.JAVA_INT));
</code>
                                                        </pre> </div> calling <code>seq.reshape(2, 6) </code> will yield the following sequence layout:<div class="snippet-container"> <button class="copy snippet-copy"><span data-copied="Copied!">Copy</span><img src="../../../../copy.svg" alt="Copy"/></button><pre class="snippet">
                                                            <code class="language-java">var reshapeSeq = MemoryLayout.sequenceLayout(2, MemoryLayout.sequenceLayout(6, ValueLayout.JAVA_INT));
</code>
                                                        </pre> </div><p> If one of the provided element count is the special value <code>-1</code>, then the element count in that position will be inferred from the remaining element counts and the element count of the flattened projection of this layout. For instance, a layout equivalent to the above <code>reshapeSeq</code> can also be computed in the following ways:                                                       </p><div class="snippet-container"> <button class="copy snippet-copy"><span data-copied="Copied!">Copy</span><img src="../../../../copy.svg" alt="Copy"/></button><pre class="snippet">
                                                            <code class="language-java">var reshapeSeqImplicit1 = seq.reshape(-1, 6);
var reshapeSeqImplicit2 = seq.reshape(2, -1);
</code>
                                                        </pre> </div>                                                                                  </div><dl class="notes"> <dt>Parameters:</dt><dd> <code>elementCounts</code> - an array of element counts, of which at most one can be <code>-1</code>.               </dd> <dt>Returns:</dt><dd> a sequence layout where element layouts in the flattened projection of this sequence layout (see <a href="#flatten()"><code>flatten()</code></a>) are re-arranged into one or more nested sequence layouts.                         </dd> <dt>Throws:</dt><dd> <code><a href="../IllegalArgumentException.html" title="class in java.lang">IllegalArgumentException</a></code> - if two or more element counts are set to <code>-1</code>, or if one or more element count is <code>&lt;= 0 </code> (but other than <code>-1</code>) or, if, after any required inference, multiplying the element counts does not yield the same element count as the flattened projection of this sequence layout.                                                  </dd>   </dl>  </section> <a end_ctx_id="method:reshape(long...)"/>   </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:flatten() [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:flatten()"/> <section class="detail" id="flatten()"><h3>flatten</h3><div class="member-signature"> <span class="return-type"><a href="SequenceLayout.html" title="interface in java.lang.foreign">SequenceLayout</a><sup><a href="#preview-java.lang.foreign.SequenceLayout">PREVIEW</a></sup></span> <span class="element-name">flatten</span>() </div><div class="block"> Returns a flattened sequence layout. The element layout of the returned sequence layout is the first non-sequence element layout found by recursively traversing the element layouts of this sequence layout. This transformation preserves the layout size; nested sequence layout in this sequence layout will be dropped and their element counts will be incorporated into that of the returned sequence layout. For instance, given a sequence layout of the kind:<div class="snippet-container"> <button class="copy snippet-copy"><span data-copied="Copied!">Copy</span><img src="../../../../copy.svg" alt="Copy"/></button><pre class="snippet">
                                                            <code class="language-java">var seq = MemoryLayout.sequenceLayout(4, MemoryLayout.sequenceLayout(3, ValueLayout.JAVA_INT));
</code>
                                                        </pre> </div> calling <code>seq.flatten()</code> will yield the following sequence layout:<div class="snippet-container"> <button class="copy snippet-copy"><span data-copied="Copied!">Copy</span><img src="../../../../copy.svg" alt="Copy"/></button><pre class="snippet">
                                                            <code class="language-java">var flattenedSeq = MemoryLayout.sequenceLayout(12, ValueLayout.JAVA_INT);
</code>
                                                        </pre> </div>                                                                             </div><dl class="notes"> <dt>Returns:</dt><dd>a sequence layout with the same size as this layout (but, possibly, with different element count), whose element layout is not a sequence layout.                       </dd> </dl>  </section> <a end_ctx_id="method:flatten()"/>   </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:withName(java.lang.String) [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:withName(java.lang.String)"/> <section class="detail" id="withName(java.lang.String)"><h3>withName</h3><div class="member-signature"> <span class="return-type"><a href="SequenceLayout.html" title="interface in java.lang.foreign">SequenceLayout</a><sup><a href="#preview-java.lang.foreign.SequenceLayout">PREVIEW</a></sup></span> <span class="element-name">withName</span> <wbr/> <span class="parameters">(<a href="../String.html" title="class in java.lang">String</a> name)</span>   </div><div class="block"> <span class="description-from-type-label">Description copied from interface: <code><a href="MemoryLayout.html#withName(java.lang.String)">MemoryLayout</a></code>   </span> </div><div class="block">Returns a memory layout of the same type with the same size and alignment constraint as this layout, but with the specified name.                      </div><dl class="notes"> <dt>Specified by: </dt><dd> <code><a href="MemoryLayout.html#withName(java.lang.String)">withName</a></code> in interface <code><a href="MemoryLayout.html" title="interface in java.lang.foreign">MemoryLayout</a><sup><a href="MemoryLayout.html#preview-java.lang.foreign.MemoryLayout">PREVIEW</a></sup></code>  </dd> <dt>Parameters:</dt><dd> <code>name</code> - the layout name.     </dd> <dt>Returns:</dt><dd>a memory layout with the given name.      </dd> <dt>See Also: </dt><dd><ul class="tag-list"><li> <a href="MemoryLayout.html#name()"><code>MemoryLayout.name()</code></a><sup><a href="MemoryLayout.html#preview-java.lang.foreign.MemoryLayout">PREVIEW</a></sup> </li></ul></dd>    </dl>  </section> <a end_ctx_id="method:withName(java.lang.String)"/>   </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:withBitAlignment(long) [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:withBitAlignment(long)"/> <section class="detail" id="withBitAlignment(long)"><h3>withBitAlignment</h3><div class="member-signature"> <span class="return-type"><a href="SequenceLayout.html" title="interface in java.lang.foreign">SequenceLayout</a><sup><a href="#preview-java.lang.foreign.SequenceLayout">PREVIEW</a></sup></span> <span class="element-name">withBitAlignment</span> <wbr/> <span class="parameters">(long bitAlignment)</span>   </div><div class="block"> <span class="description-from-type-label">Description copied from interface: <code><a href="MemoryLayout.html#withBitAlignment(long)">MemoryLayout</a></code>   </span> </div><div class="block">Returns a memory layout of the same type with the same size and name as this layout, but with the specified alignment constraint (in bits).                        </div><dl class="notes"> <dt>Specified by: </dt><dd> <code><a href="MemoryLayout.html#withBitAlignment(long)">withBitAlignment</a></code> in interface <code><a href="MemoryLayout.html" title="interface in java.lang.foreign">MemoryLayout</a><sup><a href="MemoryLayout.html#preview-java.lang.foreign.MemoryLayout">PREVIEW</a></sup></code>  </dd> <dt>Parameters:</dt><dd> <code>bitAlignment</code> - the layout alignment constraint, expressed in bits.         </dd> <dt>Returns:</dt><dd>a memory layout with the given alignment constraint.       </dd>   </dl>  </section>   <a end_ctx_id="method:withBitAlignment(long)"/>     </td></tr></table></td></tr></table></diff></diffreport>