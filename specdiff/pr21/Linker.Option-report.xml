<?xml version="1.0" encoding="UTF-8"?><diffreport><diff><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">class:Linker.Option [CHANGED]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#EEEEEE" colspan="2"> <a start_ctx_id="class:Linker.Option"/> <section class="class-description" id="class-description"><dl class="notes"> <dt><dl class="notes" changeType="diff-removed-tag"> <dt><span class="diff-html-removed">All</span> <span class="diff-html-removed">Known</span> <span class="diff-html-removed">Subinterfaces:</span>  </dt><dd> <code><a href="Linker.Option.CaptureCallState.html" title="interface in java.lang.foreign"><span class="diff-html-removed">Linker.Option.CaptureCallState</span></a><sup><a href="Linker.Option.CaptureCallState.html#preview-java.lang.foreign.Linker.Option.CaptureCallState"><span class="diff-html-removed">PREVIEW</span></a><span class="diff-html-removed"/></sup><span class="diff-html-removed"/></code> </dd> </dl>Enclosing interface: </dt><dd> <code><a href="Linker.html" title="interface in java.lang.foreign">Linker</a><sup><a href="Linker.html#preview-java.lang.foreign.Linker">PREVIEW</a></sup></code> </dd> </dl> <hr/><div class="type-signature"> <span class="modifiers">public static sealed interface     </span><span class="element-name type-name-label">Linker.Option<span class="permits" changeType="diff-removed-tag"><span class="diff-html-removed">permits</span> <a href="Linker.Option.CaptureCallState.html" title="interface in java.lang.foreign"><span class="diff-html-removed">Linker.Option.CaptureCallState</span></a><sup><a href="Linker.Option.CaptureCallState.html#preview-java.lang.foreign.Linker.Option.CaptureCallState"><span class="diff-html-removed">PREVIEW</span></a><span class="diff-html-removed"/></sup><span class="permits-note"><span class="diff-html-removed">(not</span> <span class="diff-html-removed">exhaustive)</span> </span><span class="diff-html-removed"/> </span></span> </div><div class="preview-block" id="preview-java.lang.foreign.Linker.Option"> <span class="preview-label"><code>Option</code> is a preview API of the Java platform.        </span><div class="preview-comment"> Programs can only use <code>Option</code> when preview features are enabled.          </div><div class="preview-comment">Preview features may be removed in a future release, or upgraded to permanent features of the Java platform.                 </div> </div><div class="block">A linker option is used to indicate additional linking requirements to the linker, besides what is described by a function descriptor.                    </div><dl class="notes"> <dt>Since:</dt><dd>20</dd> </dl>   </section> <a end_ctx_id="class:Linker.Option"/>   </td></tr><tr valign="top"><td bgcolor="#CCCCCC" colspan="1"> <a start_ctx_id="class:Linker.Option"/> <section class="class-description" id="class-description"><dl class="notes" changeType="diff-removed-tag"> <dt>All Known Subinterfaces:  </dt><dd> <code><a href="Linker.Option.CaptureCallState.html" title="interface in java.lang.foreign">Linker.Option.CaptureCallState</a><sup><a href="Linker.Option.CaptureCallState.html#preview-java.lang.foreign.Linker.Option.CaptureCallState">PREVIEW</a></sup></code> </dd> </dl><dl class="notes"> <dt>Enclosing interface: </dt><dd> <code><a href="Linker.html" title="interface in java.lang.foreign">Linker</a><sup><a href="Linker.html#preview-java.lang.foreign.Linker">PREVIEW</a></sup></code> </dd> </dl> <hr/><div class="type-signature"> <span class="modifiers">public static sealed interface     </span><span class="element-name type-name-label">Linker.Option</span><span class="permits" changeType="diff-removed-tag">permits <a href="Linker.Option.CaptureCallState.html" title="interface in java.lang.foreign">Linker.Option.CaptureCallState</a><sup><a href="Linker.Option.CaptureCallState.html#preview-java.lang.foreign.Linker.Option.CaptureCallState">PREVIEW</a></sup><span class="permits-note">(not exhaustive) </span> </span> </div><div class="preview-block" id="preview-java.lang.foreign.Linker.Option"> <span class="preview-label"><code>Option</code> is a preview API of the Java platform.        </span><div class="preview-comment"> Programs can only use <code>Option</code> when preview features are enabled.          </div><div class="preview-comment">Preview features may be removed in a future release, or upgraded to permanent features of the Java platform.                 </div> </div><div class="block">A linker option is used to indicate additional linking requirements to the linker, besides what is described by a function descriptor.                    </div><dl class="notes"> <dt>Since:</dt><dd>20</dd> </dl>   </section> <a end_ctx_id="class:Linker.Option"/>   </td><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="class:Linker.Option"/> <section class="class-description" id="class-description"><dl class="notes"> <dt>Enclosing interface: </dt><dd> <code><a href="Linker.html" title="interface in java.lang.foreign">Linker</a><sup><a href="Linker.html#preview-java.lang.foreign.Linker">PREVIEW</a></sup></code> </dd> </dl> <hr/><div class="type-signature"> <span class="modifiers">public static sealed interface     </span><span class="element-name type-name-label">Linker.Option</span> </div><div class="preview-block" id="preview-java.lang.foreign.Linker.Option"> <span class="preview-label"><code>Option</code> is a preview API of the Java platform.        </span><div class="preview-comment"> Programs can only use <code>Option</code> when preview features are enabled.          </div><div class="preview-comment">Preview features may be removed in a future release, or upgraded to permanent features of the Java platform.                 </div> </div><div class="block">A linker option is used to indicate additional linking requirements to the linker, besides what is described by a function descriptor.                    </div><dl class="notes"> <dt>Since:</dt><dd>20</dd> </dl>   </section> <a end_ctx_id="class:Linker.Option"/>   </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:firstVariadicArg(int) [NONE]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"><li> <a start_ctx_id="method:firstVariadicArg(int)"/> <section class="detail" id="firstVariadicArg(int)"><h3>firstVariadicArg</h3><div class="member-signature"> <span class="modifiers">static</span> <span class="return-type"><a href="Linker.Option.html" title="interface in java.lang.foreign">Linker.Option</a><sup><a href="#preview-java.lang.foreign.Linker.Option">PREVIEW</a></sup></span> <span class="element-name">firstVariadicArg</span> <wbr/> <span class="parameters">(int index)</span>   </div><div class="block">Returns a linker option used to denote the index of the first variadic argument layout in a foreign function call.                   </div><dl class="notes"> <dt>Parameters:</dt><dd> <code>index</code> - the index of the first variadic argument in a downcall handle linkage request.               </dd> <dt>Returns:</dt><dd>a linker option used to denote the index of the first variadic argument layout in a foreign function call                  </dd>  </dl>  </section>  </li> <a end_ctx_id="method:firstVariadicArg(int)"/> </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:captureCallState(java.lang.String...) [CHANGED]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#EEEEEE" colspan="2"> <a start_ctx_id="method:captureCallState(java.lang.String...)"/> <section class="detail" id="captureCallState(java.lang.String...)"><h3>captureCallState</h3><div class="member-signature"> <span class="modifiers">static</span> <span class="return-type"><a href="Linker.Option.html" title="interface in java.lang.foreign">Linker.Option</a><sup><a href="#preview-java.lang.foreign.Linker.Option"><span class="diff-html-removed">.CaptureCallState</span>PREVIEW</a></sup></span> <span class="element-name">captureCallState</span> <wbr/> <span class="parameters">(<a href="../String.html" title="class in java.lang">String</a>... capturedState)</span>   </div><div class="block"> Returns A linker option used to save portions of the execution state immediately after calling a foreign function associated with a downcall method handle, before it can be overwritten by the Java runtime, or read through conventional means.<p> <span class="diff-html-removed">A</span><span class="diff-html-added">Execution</span> <span class="diff-html-added">state</span> <span class="diff-html-added">is</span> <span class="diff-html-added">captured</span> <span class="diff-html-added">by</span> <span class="diff-html-added">a</span> <span class="diff-html-added">downcall</span> <span class="diff-html-added">method</span> <span class="diff-html-added">handle</span> <span class="diff-html-added">on</span> <span class="diff-html-added">invocation,</span> <span class="diff-html-added">by</span> <span class="diff-html-added">writing</span> <span class="diff-html-added">it</span> <span class="diff-html-added">to</span> <span class="diff-html-added">a</span> <span class="diff-html-added">native</span> <span class="diff-html-added">segment</span> <span class="diff-html-added">provided</span> <span class="diff-html-added">by</span> <span class="diff-html-added">the</span> <span class="diff-html-added">user</span> <span class="diff-html-added">to</span> <span class="diff-html-added">the</span> <span class="diff-html-added">downcall</span> <span class="diff-html-added">method</span> <span class="diff-html-added">handle.</span> <span class="diff-html-added">For</span> <span class="diff-html-added">this</span> <span class="diff-html-added">purpose,</span> <span class="diff-html-added">a</span> downcall method handle linked with <span class="diff-html-added">the</span> this option will feature an additional <a href="MemorySegment.html" title="interface in java.lang.foreign"><code>MemorySegment</code></a><sup><a href="MemorySegment.html#preview-java.lang.foreign.MemorySegment">PREVIEW</a></sup> parameter directly following the target address, and optional <a href="SegmentAllocator.html" title="interface in java.lang.foreign"><code>SegmentAllocator</code></a><sup><a href="SegmentAllocator.html#preview-java.lang.foreign.SegmentAllocator">PREVIEW</a></sup> parameters. This <span class="diff-html-removed">memory</span><span class="diff-html-added">parameter,</span> <span class="diff-html-added">called</span> <span class="diff-html-added">the</span> <span class="diff-html-added">'capture</span> <span class="diff-html-added">state</span> segment <span class="diff-html-removed">must</span> <span class="diff-html-removed">be</span> <span class="diff-html-removed">a</span><span class="diff-html-added">',</span> <span class="diff-html-added">represents</span> <span class="diff-html-added">the</span> native segment into which the captured state is written.                                                                           </p><p> <span class="diff-html-added">The</span> <span class="diff-html-added">capture</span> <span class="diff-html-added">state</span> <span class="diff-html-added">segment</span> <span class="diff-html-added">should</span> <span class="diff-html-added">have</span> <span class="diff-html-added">the</span> <span class="diff-html-added">layout</span> <span class="diff-html-added">returned</span> <span class="diff-html-added">by</span> <a href="#captureStateLayout()"><span class="diff-html-added">captureStateLayout()</span></a><span class="diff-html-added">.</span> <span class="diff-html-added">This</span> <span class="diff-html-added">layout</span> <span class="diff-html-added">is</span> <span class="diff-html-added">a</span> <span class="diff-html-added">struct</span> <span class="diff-html-added">layout</span> <span class="diff-html-added">which</span> <span class="diff-html-added">has</span> <span class="diff-html-added">a</span> <span class="diff-html-added">named</span> <span class="diff-html-added">field</span> <span class="diff-html-added">for</span> <span class="diff-html-added">each</span> <span class="diff-html-added">captured</span> <span class="diff-html-added">value.</span>                          </p><p> <span class="diff-html-added">Captured</span> <span class="diff-html-added">state</span> <span class="diff-html-added">can</span> <span class="diff-html-added">be</span> <span class="diff-html-added">retrieved</span> <span class="diff-html-added">from</span> <span class="diff-html-added">the</span> <span class="diff-html-added">capture</span> <span class="diff-html-added">state</span> <span class="diff-html-added">segment</span> <span class="diff-html-added">by</span> <span class="diff-html-added">constructing</span> <span class="diff-html-added">var</span> <span class="diff-html-added">handles</span> <span class="diff-html-added">from</span> <span class="diff-html-added">the</span> <a href="#captureStateLayout()"><span class="diff-html-added">capture</span> <span class="diff-html-added">state</span> <span class="diff-html-added">layout</span>  </a><span class="diff-html-added">.</span>                 </p><p> <span class="diff-html-added">The</span> <span class="diff-html-added">following</span> <span class="diff-html-added">example</span> <span class="diff-html-added">demonstrates</span> <span class="diff-html-added">the</span> <span class="diff-html-added">use</span> <span class="diff-html-added">of</span> <span class="diff-html-added">this</span> <span class="diff-html-added">linker</span> <span class="diff-html-added">option:</span>          </p><div class="snippet-container"> <button class="copy snippet-copy"><span data-copied="Copied!"><span class="diff-html-added">Copy</span></span><span class="diff-html-added"><img src="../../../../copy.svg" alt="Copy" changeType="diff-added-image"/></span></button><pre class="snippet">
                                                            <code class="language-java"><span class="diff-html-added">MemorySegment</span> <span class="diff-html-added">targetAddress</span> <span class="diff-html-added">=</span> <span class="diff-html-added">...</span>
<span class="diff-html-added">Linker.Option</span> <span class="diff-html-added">ccs</span> <span class="diff-html-added">=</span> <span class="diff-html-added">Linker.Option.captureCallState("errno");</span>
<span class="diff-html-added">MethodHandle</span> <span class="diff-html-added">handle</span> <span class="diff-html-added">=</span> <span class="diff-html-added">Linker.nativeLinker().downcallHandle(targetAddress,</span> <span class="diff-html-added">FunctionDescriptor.ofVoid(),</span> <span class="diff-html-added">ccs);</span>

<span class="diff-html-added">StructLayout</span> <span class="diff-html-added">capturedStateLayout</span> <span class="diff-html-added">=</span> <span class="diff-html-added">Linker.Option.capturedStateLayout();</span>
<span class="diff-html-added">VarHandle</span> <span class="diff-html-added">errnoHandle</span> <span class="diff-html-added">=</span> <span class="diff-html-added">capturedStateLayout.varHandle(PathElement.groupElement("errno"));</span>
<span class="diff-html-added">try</span> <span class="diff-html-added">(Arena</span> <span class="diff-html-added">arena</span> <span class="diff-html-added">=</span> <span class="diff-html-added">Arena.ofConfined())</span> <span class="diff-html-added">{</span>
    <span class="diff-html-added">MemorySegment</span> <span class="diff-html-added">capturedState</span> <span class="diff-html-added">=</span> <span class="diff-html-added">arena.allocate(capturedStateLayout);</span>
    <span class="diff-html-added">handle.invoke(capturedState);</span>
    <span class="diff-html-added">int</span> <span class="diff-html-added">errno</span> <span class="diff-html-added">=</span> <span class="diff-html-added">errnoHandle.get(capturedState);</span>
    <span class="diff-html-added">//</span> <span class="diff-html-added">use</span> <span class="diff-html-added">errno</span>
<span class="diff-html-added">}</span>
</code>
                                                        </pre> </div>                                      </div><dl class="notes"> <dt>Parameters:</dt><dd> <code>capturedState</code> - the names of the values to save.         </dd> <dt>Returns:</dt><dd>A linker option used to save portions of the execution state immediately after calling a foreign function associated with a downcall method handle, before it can be overwritten by the Java runtime, or read through conventional means                                    </dd> <dt>See Also: </dt><dd><ul class="tag-list"><li> <a href="#captureStateLayout()"><code><dd changeType="diff-removed-tag"><ul class="tag-list-long"><li> <a href="Linker.Option.CaptureCallState.html#supported()"><code><span class="diff-html-removed">Linker.Option.CaptureCallState.supported()</span></code><span class="diff-html-removed"/></a><sup><a href="Linker.Option.CaptureCallState.html#preview-java.lang.foreign.Linker.Option.CaptureCallState"><span class="diff-html-removed">PREVIEW</span></a><span class="diff-html-removed"/></sup> </li></ul></dd><span class="diff-html-added">captureStateLayout()</span></code></a> </li></ul></dd>   </dl>  </section> <a end_ctx_id="method:captureCallState(java.lang.String...)"/>   </td></tr><tr valign="top"><td bgcolor="#CCCCCC" colspan="1"> <a start_ctx_id="method:captureCallState(java.lang.String...)"/> <section class="detail" id="captureCallState(java.lang.String...)"><h3>captureCallState</h3><div class="member-signature"> <span class="modifiers">static</span> <span class="return-type"><a href="Linker.Option.CaptureCallState.html" title="interface in java.lang.foreign">Linker.Option.CaptureCallState</a><sup><a href="Linker.Option.CaptureCallState.html#preview-java.lang.foreign.Linker.Option.CaptureCallState">PREVIEW</a></sup></span> <span class="element-name">captureCallState</span> <wbr/> <span class="parameters">(<a href="../String.html" title="class in java.lang">String</a>... capturedState)</span>   </div><div class="block"> Returns A linker option used to save portions of the execution state immediately after calling a foreign function associated with a downcall method handle, before it can be overwritten by the Java runtime, or read through conventional means.<p> A downcall method handle linked with this option will feature an additional <a href="MemorySegment.html" title="interface in java.lang.foreign"><code>MemorySegment</code></a><sup><a href="MemorySegment.html#preview-java.lang.foreign.MemorySegment">PREVIEW</a></sup> parameter directly following the target address, and optional <a href="SegmentAllocator.html" title="interface in java.lang.foreign"><code>SegmentAllocator</code></a><sup><a href="SegmentAllocator.html#preview-java.lang.foreign.SegmentAllocator">PREVIEW</a></sup> parameters. This memory segment must be a native segment into which the captured state is written.                                      </p>                                      </div><dl class="notes"> <dt>Parameters:</dt><dd> <code>capturedState</code> - the names of the values to save.         </dd> <dt>Returns:</dt><dd>A linker option used to save portions of the execution state immediately after calling a foreign function associated with a downcall method handle, before it can be overwritten by the Java runtime, or read through conventional means                                    </dd> <dt>See Also: </dt><dd changeType="diff-removed-tag"><ul class="tag-list-long"><li> <a href="Linker.Option.CaptureCallState.html#supported()"><code>Linker.Option.CaptureCallState.supported()</code></a><sup><a href="Linker.Option.CaptureCallState.html#preview-java.lang.foreign.Linker.Option.CaptureCallState">PREVIEW</a></sup> </li></ul></dd>   </dl>  </section>   <a end_ctx_id="method:captureCallState(java.lang.String...)"/>     </td><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:captureCallState(java.lang.String...)"/> <section class="detail" id="captureCallState(java.lang.String...)"><h3>captureCallState</h3><div class="member-signature"> <span class="modifiers">static</span> <span class="return-type"><a href="Linker.Option.html" title="interface in java.lang.foreign">Linker.Option</a><sup><a href="#preview-java.lang.foreign.Linker.Option">PREVIEW</a></sup></span> <span class="element-name">captureCallState</span> <wbr/> <span class="parameters">(<a href="../String.html" title="class in java.lang">String</a>... capturedState)</span>   </div><div class="block"> Returns A linker option used to save portions of the execution state immediately after calling a foreign function associated with a downcall method handle, before it can be overwritten by the Java runtime, or read through conventional means.<p> Execution state is captured by a downcall method handle on invocation, by writing it to a native segment provided by the user to the downcall method handle. For this purpose, a downcall method handle linked with the this option will feature an additional <a href="MemorySegment.html" title="interface in java.lang.foreign"><code>MemorySegment</code></a><sup><a href="MemorySegment.html#preview-java.lang.foreign.MemorySegment">PREVIEW</a></sup> parameter directly following the target address, and optional <a href="SegmentAllocator.html" title="interface in java.lang.foreign"><code>SegmentAllocator</code></a><sup><a href="SegmentAllocator.html#preview-java.lang.foreign.SegmentAllocator">PREVIEW</a></sup> parameters. This parameter, called the 'capture state segment', represents the native segment into which the captured state is written.                                                                        </p><p> The capture state segment should have the layout returned by <a href="#captureStateLayout()">captureStateLayout()</a>. This layout is a struct layout which has a named field for each captured value.                          </p><p> Captured state can be retrieved from the capture state segment by constructing var handles from the <a href="#captureStateLayout()">capture state layout  </a>.                 </p><p> The following example demonstrates the use of this linker option:          </p><div class="snippet-container"> <button class="copy snippet-copy"><span data-copied="Copied!">Copy</span><img src="../../../../copy.svg" alt="Copy"/></button><pre class="snippet">
                                                            <code class="language-java">MemorySegment targetAddress = ...
Linker.Option ccs = Linker.Option.captureCallState("errno");
MethodHandle handle = Linker.nativeLinker().downcallHandle(targetAddress, FunctionDescriptor.ofVoid(), ccs);

StructLayout capturedStateLayout = Linker.Option.capturedStateLayout();
VarHandle errnoHandle = capturedStateLayout.varHandle(PathElement.groupElement("errno"));
try (Arena arena = Arena.ofConfined()) {
    MemorySegment capturedState = arena.allocate(capturedStateLayout);
    handle.invoke(capturedState);
    int errno = errnoHandle.get(capturedState);
    // use errno
}
</code>
                                                        </pre> </div>                                      </div><dl class="notes"> <dt>Parameters:</dt><dd> <code>capturedState</code> - the names of the values to save.         </dd> <dt>Returns:</dt><dd>A linker option used to save portions of the execution state immediately after calling a foreign function associated with a downcall method handle, before it can be overwritten by the Java runtime, or read through conventional means                                    </dd> <dt>See Also: </dt><dd><ul class="tag-list"><li> <a href="#captureStateLayout()"><code>captureStateLayout()</code></a> </li></ul></dd>   </dl>  </section> <a end_ctx_id="method:captureCallState(java.lang.String...)"/>   </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:captureStateLayout() [ADDED]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:captureStateLayout()"><span class="diff-html-added"/></a> <section class="detail" id="captureStateLayout()"><h3><span class="diff-html-added">captureStateLayout</span></h3><div class="member-signature"> <span class="modifiers"><span class="diff-html-added">static</span></span> <span class="return-type"><a href="StructLayout.html" title="interface in java.lang.foreign"><span class="diff-html-added">StructLayout</span></a><sup><a href="StructLayout.html#preview-java.lang.foreign.StructLayout"><span class="diff-html-added">PREVIEW</span></a></sup></span> <span class="element-name"><span class="diff-html-added">captureStateLayout</span></span><span class="diff-html-added">()</span> </div><div class="block"> <span class="diff-html-added">Returns</span> <span class="diff-html-added">A</span> <span class="diff-html-added">struct</span> <span class="diff-html-added">layout</span> <span class="diff-html-added">that</span> <span class="diff-html-added">represents</span> <span class="diff-html-added">the</span> <span class="diff-html-added">layout</span> <span class="diff-html-added">of</span> <span class="diff-html-added">the</span> <span class="diff-html-added">capture</span> <span class="diff-html-added">state</span> <span class="diff-html-added">segment</span> <span class="diff-html-added">that</span> <span class="diff-html-added">is</span> <span class="diff-html-added">passed</span> <span class="diff-html-added">to</span> <span class="diff-html-added">a</span> <span class="diff-html-added">downcall</span> <span class="diff-html-added">handle</span> <span class="diff-html-added">linked</span> <span class="diff-html-added">with</span> <a href="#captureCallState(java.lang.String...)"><code><span class="diff-html-added">captureCallState(String...)</span></code></a><span class="diff-html-added">.</span>                       </div><dl class="notes"> <dt><span class="diff-html-added">Returns:</span></dt><dd> <span class="diff-html-added">A</span> <span class="diff-html-added">struct</span> <span class="diff-html-added">layout</span> <span class="diff-html-added">that</span> <span class="diff-html-added">represents</span> <span class="diff-html-added">the</span> <span class="diff-html-added">layout</span> <span class="diff-html-added">of</span> <span class="diff-html-added">the</span> <span class="diff-html-added">capture</span> <span class="diff-html-added">state</span> <span class="diff-html-added">segment</span> <span class="diff-html-added">that</span> <span class="diff-html-added">is</span> <span class="diff-html-added">passed</span> <span class="diff-html-added">to</span> <span class="diff-html-added">a</span> <span class="diff-html-added">downcall</span> <span class="diff-html-added">handle</span> <span class="diff-html-added">linked</span> <span class="diff-html-added">with</span> <a href="#captureCallState(java.lang.String...)"><code><span class="diff-html-added">captureCallState(String...)</span></code></a>                      </dd> <dt><span class="diff-html-added">See</span> <span class="diff-html-added">Also:</span> </dt><dd><ul class="tag-list"><li> <a href="#captureCallState(java.lang.String...)"><code><span class="diff-html-added">captureCallState(String...)</span></code></a> </li></ul></dd>  </dl>  </section> <a end_ctx_id="method:captureStateLayout()"><span class="diff-html-added"/></a>   </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:isTrivial() [ADDED]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:isTrivial()"><span class="diff-html-added"/></a> <section class="detail" id="isTrivial()"><h3><span class="diff-html-added">isTrivial</span></h3><div class="member-signature"> <span class="modifiers"><span class="diff-html-added">static</span></span> <span class="return-type"><a href="Linker.Option.html" title="interface in java.lang.foreign"><span class="diff-html-added">Linker.Option</span></a><sup><a href="#preview-java.lang.foreign.Linker.Option"><span class="diff-html-added">PREVIEW</span></a></sup></span> <span class="element-name"><span class="diff-html-added">isTrivial</span></span><span class="diff-html-added">()</span> </div><div class="block"> <span class="diff-html-added">Returns</span> <span class="diff-html-added">A</span> <span class="diff-html-added">linker</span> <span class="diff-html-added">option</span> <span class="diff-html-added">used</span> <span class="diff-html-added">to</span> <span class="diff-html-added">mark</span> <span class="diff-html-added">a</span> <span class="diff-html-added">foreign</span> <span class="diff-html-added">function</span> <span class="diff-html-added">as</span> <em><span class="diff-html-added">trivial</span></em><span class="diff-html-added">.</span><p> <span class="diff-html-added">A</span> <span class="diff-html-added">trivial</span> <span class="diff-html-added">function</span> <span class="diff-html-added">is</span> <span class="diff-html-added">a</span> <span class="diff-html-added">function</span> <span class="diff-html-added">that</span> <span class="diff-html-added">has</span> <span class="diff-html-added">an</span> <span class="diff-html-added">extremely</span> <span class="diff-html-added">short</span> <span class="diff-html-added">running</span> <span class="diff-html-added">time</span> <span class="diff-html-added">in</span> <span class="diff-html-added">all</span> <span class="diff-html-added">cases</span> <span class="diff-html-added">(similar</span> <span class="diff-html-added">to</span> <span class="diff-html-added">calling</span> <span class="diff-html-added">an</span> <span class="diff-html-added">empty</span> <span class="diff-html-added">function),</span> <span class="diff-html-added">and</span> <span class="diff-html-added">does</span> <span class="diff-html-added">not</span> <span class="diff-html-added">call</span> <span class="diff-html-added">back</span> <span class="diff-html-added">into</span> <span class="diff-html-added">Java</span> <span class="diff-html-added">(e.g.</span> <span class="diff-html-added">using</span> <span class="diff-html-added">an</span> <span class="diff-html-added">upcall</span> <span class="diff-html-added">stub).</span>                                  </p><p> <span class="diff-html-added">Using</span> <span class="diff-html-added">this</span> <span class="diff-html-added">linker</span> <span class="diff-html-added">option</span> <span class="diff-html-added">is</span> <span class="diff-html-added">a</span> <span class="diff-html-added">hint</span> <span class="diff-html-added">which</span> <span class="diff-html-added">some</span> <span class="diff-html-added">implementations</span> <span class="diff-html-added">may</span> <span class="diff-html-added">use</span> <span class="diff-html-added">to</span> <span class="diff-html-added">apply</span> <span class="diff-html-added">optimizations</span> <span class="diff-html-added">that</span> <span class="diff-html-added">are</span> <span class="diff-html-added">only</span> <span class="diff-html-added">valid</span> <span class="diff-html-added">for</span> <span class="diff-html-added">trivial</span> <span class="diff-html-added">functions.</span>                      </p><p> <span class="diff-html-added">Using</span> <span class="diff-html-added">this</span> <span class="diff-html-added">linker</span> <span class="diff-html-added">option</span> <span class="diff-html-added">when</span> <span class="diff-html-added">linking</span> <span class="diff-html-added">non</span> <span class="diff-html-added">trivial</span> <span class="diff-html-added">functions</span> <span class="diff-html-added">is</span> <span class="diff-html-added">likely</span> <span class="diff-html-added">to</span> <span class="diff-html-added">have</span> <span class="diff-html-added">adverse</span> <span class="diff-html-added">effects,</span> <span class="diff-html-added">such</span> <span class="diff-html-added">as</span> <span class="diff-html-added">loss</span> <span class="diff-html-added">of</span> <span class="diff-html-added">performance,</span> <span class="diff-html-added">or</span> <span class="diff-html-added">JVM</span> <span class="diff-html-added">crashes.</span>                       </p>            </div><dl class="notes"> <dt><span class="diff-html-added">Returns:</span></dt><dd> <span class="diff-html-added">A</span> <span class="diff-html-added">linker</span> <span class="diff-html-added">option</span> <span class="diff-html-added">used</span> <span class="diff-html-added">to</span> <span class="diff-html-added">mark</span> <span class="diff-html-added">a</span> <span class="diff-html-added">foreign</span> <span class="diff-html-added">function</span> <span class="diff-html-added">as</span> <em><span class="diff-html-added">trivial</span></em>           </dd> </dl>  </section> <a end_ctx_id="method:isTrivial()"><span class="diff-html-added"/></a>   </td></tr></table></td></tr></table><table border="0" cellpadding="1" cellspacing="0" width="100%"><tr><td><h3 class="ctxid">method:uncaughtExceptionHandler(java.lang.Thread.UncaughtExceptionHandler) [ADDED]</h3></td></tr><tr><td><table border="0" cellpadding="5" cellspacing="1" bgcolor="black" width="100%"><tr valign="top"><td bgcolor="#FFFFFF" colspan="1"> <a start_ctx_id="method:uncaughtExceptionHandler(java.lang.Thread.UncaughtExceptionHandler)"><span class="diff-html-added"/></a> <section class="detail" id="uncaughtExceptionHandler(java.lang.Thread.UncaughtExceptionHandler)"><h3><span class="diff-html-added">uncaughtExceptionHandler</span></h3><div class="member-signature"> <span class="modifiers"><span class="diff-html-added">static</span></span> <span class="return-type"><a href="Linker.Option.html" title="interface in java.lang.foreign"><span class="diff-html-added">Linker.Option</span></a><sup><a href="#preview-java.lang.foreign.Linker.Option"><span class="diff-html-added">PREVIEW</span></a></sup></span> <span class="element-name"><span class="diff-html-added">uncaughtExceptionHandler</span></span> <wbr/> <span class="parameters"><span class="diff-html-added">(</span><a href="../Thread.UncaughtExceptionHandler.html" title="interface in java.lang"><span class="diff-html-added">Thread.UncaughtExceptionHandler</span></a><span class="diff-html-added"> handler)</span></span>   </div><div class="block"><span class="diff-html-added">Returns</span> <span class="diff-html-added">a</span> <span class="diff-html-added">linker</span> <span class="diff-html-added">option</span> <span class="diff-html-added">that</span> <span class="diff-html-added">can</span> <span class="diff-html-added">be</span> <span class="diff-html-added">used</span> <span class="diff-html-added">to</span> <span class="diff-html-added">specify</span> <span class="diff-html-added">the</span> <span class="diff-html-added">uncaught</span> <span class="diff-html-added">exception</span> <span class="diff-html-added">handler</span> <span class="diff-html-added">that</span> <span class="diff-html-added">should</span> <span class="diff-html-added">be</span> <span class="diff-html-added">executed</span> <span class="diff-html-added">if</span> <span class="diff-html-added">an</span> <span class="diff-html-added">exception</span> <span class="diff-html-added">is</span> <span class="diff-html-added">thrown,</span> <span class="diff-html-added">but</span> <span class="diff-html-added">not</span> <span class="diff-html-added">caught,</span> <span class="diff-html-added">during</span> <span class="diff-html-added">an</span> <span class="diff-html-added">upcall.</span>                            </div><dl class="notes"> <dt><span class="diff-html-added">API</span> <span class="diff-html-added">Note:</span> </dt><dd><span class="diff-html-added">using</span> <span class="diff-html-added">a</span> <span class="diff-html-added">custom</span> <span class="diff-html-added">exception</span> <span class="diff-html-added">handler</span> <span class="diff-html-added">will</span> <span class="diff-html-added">not</span> <span class="diff-html-added">prevent</span> <span class="diff-html-added">the</span> <span class="diff-html-added">VM</span> <span class="diff-html-added">from</span> <span class="diff-html-added">exiting</span> <span class="diff-html-added">in</span> <span class="diff-html-added">the</span> <span class="diff-html-added">case</span> <span class="diff-html-added">of</span> <span class="diff-html-added">an</span> <span class="diff-html-added">uncaught</span> <span class="diff-html-added">exception</span> <span class="diff-html-added">during</span> <span class="diff-html-added">an</span> <span class="diff-html-added">upcall.</span>                     </dd> <dt><span class="diff-html-added">Parameters:</span></dt><dd> <code><span class="diff-html-added">handler</span></code> <span class="diff-html-added">-</span> <span class="diff-html-added">the</span> <span class="diff-html-added">handler</span>    </dd> <dt><span class="diff-html-added">Returns:</span></dt><dd><span class="diff-html-added">a</span> <span class="diff-html-added">linker</span> <span class="diff-html-added">option</span> <span class="diff-html-added">that</span> <span class="diff-html-added">can</span> <span class="diff-html-added">be</span> <span class="diff-html-added">used</span> <span class="diff-html-added">to</span> <span class="diff-html-added">specify</span> <span class="diff-html-added">the</span> <span class="diff-html-added">uncaught</span> <span class="diff-html-added">exception</span> <span class="diff-html-added">handler</span> <span class="diff-html-added">that</span> <span class="diff-html-added">should</span> <span class="diff-html-added">be</span> <span class="diff-html-added">executed</span> <span class="diff-html-added">if</span> <span class="diff-html-added">an</span> <span class="diff-html-added">exception</span> <span class="diff-html-added">is</span> <span class="diff-html-added">thrown,</span> <span class="diff-html-added">but</span> <span class="diff-html-added">not</span> <span class="diff-html-added">caught,</span> <span class="diff-html-added">during</span> <span class="diff-html-added">an</span> <span class="diff-html-added">upcall</span>                           </dd>   </dl>  </section>   <a end_ctx_id="method:uncaughtExceptionHandler(java.lang.Thread.UncaughtExceptionHandler)"><span class="diff-html-added"/></a>     </td></tr></table></td></tr></table></diff></diffreport>